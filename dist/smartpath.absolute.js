/// <reference path="typings/main.d.ts" />
var plugins = require("./smartpath.plugins");
var makeAbsolute = function (localPathArg, baseArg) {
    var absolutePath;
    if (baseArg) {
        absolutePath = plugins.path.join(baseArg, localPathArg);
    }
    else {
        absolutePath = plugins.path.resolve(localPathArg);
    }
    return absolutePath;
};
var absolute = function (relativeArg, baseArg) {
    if (typeof relativeArg === "string") {
        return makeAbsolute(relativeArg);
    }
    else if (Array.isArray(relativeArg)) {
        var relativeArray = relativeArg;
        var absoluteArray;
        for (var key in relativeArray) {
            absoluteArray.push(makeAbsolute(relativeArray[key]));
        }
        ;
        return absoluteArray;
    }
    else {
        plugins.beautylog.error("smartpath.absolute() could not make sense of the input. " +
            "Input is neither String nor Array");
        return false;
    }
};
module.exports = absolute;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNtYXJ0cGF0aC5hYnNvbHV0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwwQ0FBMEM7QUFDMUMsSUFBTyxPQUFPLFdBQVcscUJBQXFCLENBQUMsQ0FBQztBQUVoRCxJQUFJLFlBQVksR0FBRyxVQUFTLFlBQW1CLEVBQUUsT0FBZTtJQUM1RCxJQUFJLFlBQW1CLENBQUM7SUFDeEIsRUFBRSxDQUFBLENBQUMsT0FBTyxDQUFDLENBQUEsQ0FBQztRQUNSLFlBQVksR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUMsWUFBWSxDQUFDLENBQUM7SUFDM0QsQ0FBQztJQUFDLElBQUksQ0FBQyxDQUFDO1FBQ0gsWUFBWSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ3ZELENBQUM7SUFDRCxNQUFNLENBQUMsWUFBWSxDQUFDO0FBQ3hCLENBQUMsQ0FBQztBQUVGLElBQUksUUFBUSxHQUFHLFVBQVMsV0FBZSxFQUFFLE9BQWU7SUFDcEQsRUFBRSxDQUFBLENBQUMsT0FBTyxXQUFXLEtBQUssUUFBUSxDQUFDLENBQUEsQ0FBQztRQUNoQyxNQUFNLENBQUMsWUFBWSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ3JDLENBQUM7SUFBQyxJQUFJLENBQUMsRUFBRSxDQUFBLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFBLENBQUM7UUFDbEMsSUFBSSxhQUFhLEdBQUcsV0FBVyxDQUFBO1FBQy9CLElBQUksYUFBc0IsQ0FBQztRQUMzQixHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLGFBQWEsQ0FBQyxDQUFBLENBQUM7WUFDM0IsYUFBYSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN6RCxDQUFDO1FBQUEsQ0FBQztRQUNGLE1BQU0sQ0FBQyxhQUFhLENBQUM7SUFDekIsQ0FBQztJQUFDLElBQUksQ0FBQyxDQUFDO1FBQ0osT0FBTyxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsMERBQTBEO1lBQzlFLG1DQUFtQyxDQUFDLENBQUM7UUFDekMsTUFBTSxDQUFDLEtBQUssQ0FBQztJQUNqQixDQUFDO0FBQ0wsQ0FBQyxDQUFDO0FBRUYsaUJBQVMsUUFBUSxDQUFDIiwiZmlsZSI6InNtYXJ0cGF0aC5hYnNvbHV0ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vLyA8cmVmZXJlbmNlIHBhdGg9XCJ0eXBpbmdzL21haW4uZC50c1wiIC8+XG5pbXBvcnQgcGx1Z2lucyA9IHJlcXVpcmUoXCIuL3NtYXJ0cGF0aC5wbHVnaW5zXCIpO1xuXG52YXIgbWFrZUFic29sdXRlID0gZnVuY3Rpb24obG9jYWxQYXRoQXJnOnN0cmluZywgYmFzZUFyZz86c3RyaW5nKTpzdHJpbmcge1xuICAgIGxldCBhYnNvbHV0ZVBhdGg6c3RyaW5nO1xuICAgIGlmKGJhc2VBcmcpe1xuICAgICAgICBhYnNvbHV0ZVBhdGggPSBwbHVnaW5zLnBhdGguam9pbihiYXNlQXJnLGxvY2FsUGF0aEFyZyk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgIGFic29sdXRlUGF0aCA9IHBsdWdpbnMucGF0aC5yZXNvbHZlKGxvY2FsUGF0aEFyZyk7XG4gICAgfVxuICAgIHJldHVybiBhYnNvbHV0ZVBhdGg7XG59O1xuXG52YXIgYWJzb2x1dGUgPSBmdW5jdGlvbihyZWxhdGl2ZUFyZzphbnksIGJhc2VBcmc/OnN0cmluZyk6YW55IHtcbiAgICBpZih0eXBlb2YgcmVsYXRpdmVBcmcgPT09IFwic3RyaW5nXCIpe1xuICAgICAgICByZXR1cm4gbWFrZUFic29sdXRlKHJlbGF0aXZlQXJnKTtcbiAgICB9IGVsc2UgaWYoQXJyYXkuaXNBcnJheShyZWxhdGl2ZUFyZykpe1xuICAgICAgICBsZXQgcmVsYXRpdmVBcnJheSA9IHJlbGF0aXZlQXJnXG4gICAgICAgIGxldCBhYnNvbHV0ZUFycmF5OnN0cmluZ1tdO1xuICAgICAgICBmb3IgKGxldCBrZXkgaW4gcmVsYXRpdmVBcnJheSl7XG4gICAgICAgICAgICBhYnNvbHV0ZUFycmF5LnB1c2gobWFrZUFic29sdXRlKHJlbGF0aXZlQXJyYXlba2V5XSkpO1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gYWJzb2x1dGVBcnJheTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBwbHVnaW5zLmJlYXV0eWxvZy5lcnJvcihcInNtYXJ0cGF0aC5hYnNvbHV0ZSgpIGNvdWxkIG5vdCBtYWtlIHNlbnNlIG9mIHRoZSBpbnB1dC4gXCIgK1xuICAgICAgICAgICAgXCJJbnB1dCBpcyBuZWl0aGVyIFN0cmluZyBub3IgQXJyYXlcIik7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59O1xuXG5leHBvcnQgPSBhYnNvbHV0ZTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
